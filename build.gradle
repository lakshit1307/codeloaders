buildscript {
	ext {
		springBootVersion = '1.5.8.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id "org.sonarqube" version "2.6"
}

apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.springframework.boot'
apply plugin: 'pmd'



group = 'com.healthedge'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

pmd {
	ignoreFailures=false
	pmdTest.enabled=false
	ruleSets = [
		'java-basic',
		'java-braces',
		'java-clone',
		'java-codesize',
		'java-design',
		'java-empty',
		'java-finalizers',
		'java-imports',
		'java-optimizations',
		'java-strictexception',
		'java-strings',
		'java-typeresolution',
		'java-unnecessary',
		'java-unusedcode'
	]
}

jar {
	baseName = 'codeloaders'
	version = '0.0.1-SNAPSHOT'
}


ext {
	buildNumber = System.getenv("BUILD_NUMBER") ?: "dev"
	buildNumber = buildNumber.trim()
}

publishing {
	publications {
		maven(MavenPublication) {
			groupId 'com.healthege.codeloaders'
			version "1.0.0-$buildNumber"
			artifactId 'codeloaders'
			from components.java
		}
	}

}

sonarqube {
	properties {
		property "sonar.sources", "src/main"
		property "sonar.tests", "src/test"
	}
}



repositories {
	mavenCentral()
	mavenLocal()	
	jcenter()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-batch')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile group: 'joda-time', name: 'joda-time', version: '2.9.9'
	compile group: 'commons-io', name: 'commons-io', version: '2.4'
	compile group: 'com.oracle', name: 'ojdbc8', version: '12.2.0.1'
	compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
	compile group: 'commons-collections', name: 'commons-collections', version: '3.2.2'
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.7.0'
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.7.0'
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.batch:spring-batch-test')
	testCompile group: 'org.mockito', name: 'mockito-core', version: '2.12.0'
	testCompile group: 'hsqldb', name: 'hsqldb', version: '1.8.0.10'
	testCompile group: 'com.h2database', name: 'h2', version: '1.4.196'
}

mainClassName='com.healthedge.codeloaders.CodeloadersApplication'

startScripts {
	classpath += files('src/dist/config')
	doLast {
		def windowsScriptFile = file getWindowsScript()
		def unixScriptFile = file getUnixScript()
		windowsScriptFile.text = windowsScriptFile.text.replace('%APP_HOME%\\lib\\config', '%APP_HOME%\\config')
		unixScriptFile.text = unixScriptFile.text.replace('$APP_HOME/lib/config', '$APP_HOME/config')
	}
}